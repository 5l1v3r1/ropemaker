#!/usr/bin/env python
#
#   Make a C file for flash file system (ffs) data
#   
#   Usage: mkffs [dir] [outfile] [varname]
#
#   Defaults: dir=www, outfile=data.c, varname=ffs
#
import os, sys, zlib, gzip, glob, mimetypes

gzip_exts = ['html', 'htm', 'js', 'css']

mimetypes.init()

data = ''
offset = 0
ffsdir = []
basedir = sys.argv[1] if len(sys.argv) > 1 else 'www'

files = [ os.path.join(root, fn) for root, dirnames, fns in os.walk(basedir) for fn in fns]
for path in files:
    with open(path, "rb") as f: 
        fileBytes = f.read()
        ext = os.path.splitext(path)[1]
        info = { 'path':path[len(basedir)+1:], 'type':mimetypes.guess_type(path), 'offset':offset }
        if ext[1:] in gzip_exts:
            gzip_compress = zlib.compressobj(9, zlib.DEFLATED, zlib.MAX_WBITS | 16)
            data += gzip_compress.compress(fileBytes) + gzip_compress.flush()
            info['type'] = info['type'][0],'gzip'
        else:
            data += fileBytes
        if info['type'][1] == None:
            info['type'] = info['type'][0],''
        ffsdir.append(info)
        offset = len(data)
        
ffsdir.append({ 'path':'', 'type':('',''), 'offset':offset })
dataHex = ', '.join(hex(x) for x in bytearray(data))
varname = sys.argv[3] if len(sys.argv) > 3 else 'ffs'

with open(sys.argv[2] if len(sys.argv) > 2 else 'data.c', "wb") as f:
    ffstxt = ', '.join('{"'+i['path']+'","'+i['type'][0]+'","'+i['type'][1]+'",%d}' % i['offset'] for i in ffsdir)
    f.write('// flash filesystem data generated by %s\n' % ' '.join(sys.argv))
    f.write('#include "ffs.h"\nconst unsigned int %s_len = %d;\n' % (varname, len(ffsdir)-1))
    f.write('const ffsinfo %s_dir[] = {%s};\n' % (varname, ffstxt))
    f.write('const INFLASH unsigned char %s_data[] = {%s};\n' % (varname, dataHex))
    


